---

- name: Get BASIC info about debian servers
  hosts: "{{ target }}"
  tasks:
    - name: Get FQDN
      shell: hostname -f
      register: hostname_os

    - name: Get DOMAIN
      shell: hostname -d
      register: hostname_domain      

    - name: Get uptime
      shell: uptime -p
      register: get_uptime   


    - name: Get VERSION
      shell: cat /etc/debian_version
      register: os_version      

    - name: Check Home Space
      shell: df /home --output\=pcent | tail -1 | tr -dc '0-9'
      register: home_freespace

    - name: Failed when /home has no 20% FREE
      fail:
        msg: WARNING!!! Home Partition has no expected free space
      when: home_freespace.stdout|float is gt 80
      ignore_errors: yes

    - name: Check Root Space
      shell: df / --output\=pcent | tail -1 | tr -dc '0-9'
      register: root_freespace

    - name: Failed when / has no 20% FREE
      fail:
        msg: WARNING!!! Root Partition has no expected free space
      when: root_freespace.stdout|float is gt 80
      ignore_errors: yes

    - name: Check Tmp Space
      shell: df /tmp --output\=pcent | tail -1 | tr -dc '0-9'
      register: tmp_freespace

    - name: Failed when /tmp has no 20% FREE
      fail:
        msg: WARNING!!! TMP Partition has no expected free space
      when: tmp_freespace.stdout|float is gt 80
      ignore_errors: yes    

    - name: Check srv Space
      shell: df /srv --output\=pcent | tail -1 | tr -dc '0-9'
      register: srv_freespace

    - name: Failed when /srv has no 20% FREE
      fail:
        msg: WARNING!!! SRV Partition has no expected free space
      when: srv_freespace.stdout|float is gt 80
      ignore_errors: yes          

    - name: Check var Space
      shell: df /var --output\=pcent | tail -1 | tr -dc '0-9'
      register: var_freespace

    - name: Failed when /var has no 20% FREE
      fail:
        msg: WARNING!!! VAR Partition has no expected free space
      when: var_freespace.stdout|float is gt 80
      ignore_errors: yes       

    - name: Check Total RAM
      shell: free -g | tail -2 | head -1 | while read mem total used free;do echo $total;done
      register: total_ram   

    - name: Check Used RAM
      shell: free -g | tail -2 | head -1 | while read mem total used free;do echo $used;done
      register: used_ram    

    - name: Check MS to gateway
      shell: ping -c 1 {{ ansible_default_ipv4.gateway }} | head -2 | tail -1 | while read abytes bytes from ip icmp_seq ttl time;do echo $time;done | cut -d'=' -f 2
      register: ms_to_gateway    

    - name: Check open ports
      become: yes
      shell: sudo netstat -4nlp | grep -e tcp -e udp | grep LISTEN | while read proto rec send localadd remoteadd state daemon;do echo Service:. `echo $daemon | cut -d'/' -f 2` $localadd;done
      register: open_ports            

    - name: Arquitecture
      become: yes
      shell: sudo dmidecode -s system-manufacturer
      register: system_manufacturer  

    - name: Service TAG
      become: yes
      shell: sudo dmidecode -s system-serial-number
      register: system_serial  

    - name: Get number of disks
      shell: lsblk -S | sed -n '1!p' | grep disk | wc -l
      register: number_of_disk 

    - name: Get disks names
      shell: lsblk -S | sed -n '1!p' | grep disk | while read name all;do echo $name;done | tr '\n' ','
      register: disks_names       

    - name: Get fail2ban total banned
      become: yes
      shell: sudo fail2ban-client status sshd | grep "Total banned:" | tr -dc '0-9'
      register: fail2ban_total_banned       

    - name: Get fail2ban current banned
      become: yes
      shell: sudo fail2ban-client status sshd | grep "Currently banned:" | tr -dc '0-9'
      register: fail2ban_current_banned        


    - name: Print Log
      debug:
        msg:
          - SERVER FQDN = {{ hostname_os.stdout }}
          - Service TAG = {{ system_serial.stdout }}
          - System Manufacturer = {{ system_manufacturer.stdout }}
          - DOMAIN = {{ hostname_domain.stdout }}
          - DEFAULT IP ADDRESS = {{ ansible_default_ipv4.address }}
          - DEFAULT GATEWAY = {{ ansible_default_ipv4.gateway }}
          - OS VERSION = {{ os_version.stdout }}
          - Number of Physical Disks = {{ number_of_disk.stdout }}
          - DISKS = {{ disks_names.stdout }}
          - HOME % FREE SPACE = {{ home_freespace.stdout }}%
          - ROOT % FREE SPACE = {{ root_freespace.stdout }}%
          - SRV % FREE SPACE = {{ srv_freespace.stdout }}%
          - VAR % FREE SPACE = {{ var_freespace.stdout }}%
          - TMP % FREE SPACE = {{ tmp_freespace.stdout }}%
          - Server Uptime = {{ get_uptime.stdout }}
          - Total RAM = {{ total_ram.stdout }}GB
          - Used RAM = {{ used_ram.stdout }}GB
          - Miliseconds to gateway = {{ ms_to_gateway.stdout }}
          - Listening Ports = {{ open_ports.stdout }}
          - The Server has banned = {{ fail2ban_total_banned.stdout }} IPs
          - Actual IPs banned =  {{ fail2ban_current_banned.stdout }}

    - name: Create Report Spanish (1/3)
      when: lang == "español"
      shell: echo "Resumen para {{ hostname_os.stdout }}\n\nServidor:.{{ system_manufacturer.stdout }}\nService Tag:.{{system_serial.stdout}}\nDominio:.{{ hostname_domain.stdout }}\nIP:.{{ ansible_default_ipv4.address }}\nGateway:.{{ ansible_default_ipv4.gateway }}\nVersion de OS:. Debian {{ os_version.stdout }}\n\n" > ~/{{hostname_os.stdout}}.info.log

    - name: Create Report Spanish (2/3)
      when: lang == "español"
      shell: echo "ms al Gateway:\t{{ ms_to_gateway.stdout }}\nRAM Total:\t{{ total_ram.stdout }}GB\nRam Usada:\t{{ used_ram.stdout }}GB\n\nCantidad de Discos fisicos:{{number_of_disk.stdout}}\nDiscos:{{disks_names.stdout}}\n\nResumen de espacio en particiones:.\n/HOME/\t{{ home_freespace.stdout }}%\tutilizado.\n/ROOT/\t{{ root_freespace.stdout }}%\tutilizado.\n/SRV/\t{{ srv_freespace.stdout }}%\tutilizado.\n/VAR/\t{{ var_freespace.stdout }}%\tutilizado.\n/TMP/\t{{ tmp_freespace.stdout }}%\tutilizado.\n" >> ~/{{hostname_os.stdout}}.info.log

    - name: Create Report Spanish (3/3)
      when: lang == "español"
      shell: echo "El servidor ha baneado un total de:{{ fail2ban_total_banned.stdout }} IPs\nDe las cuales se encuentran baneadas:{{ fail2ban_current_banned.stdout }}\n\nServicios corriendo:\n{{ open_ports.stdout }}\n\nUptime Server:. {{ get_uptime.stdout }}" >> ~/{{hostname_os.stdout}}.info.log          
          
